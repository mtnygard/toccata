
(main [_]
      (and (=* 0 0)
           ;; a comment
           (=* (inc 0) (inc 0))
           (maybe (pr* "'and' works\n")))
      (or (=* 0 1)
          ;; a comment
          (maybe (pr* "'or' works\n")))
      (or (and (=* 0 0)
               (maybe (pr* "'and' in 'or' works\n")))
          (maybe (pr* "'and' in 'or' works\n")))
      (or (and (=* 1 0)
               (maybe (pr* "'and' in 'or' works\n")))
          (and (=* 0 0)
               (maybe (pr* "2 'and' in 'or' works\n"))))
      (and (or (=* 0 0)
               (maybe (pr* "'or' in 'and' wandks\n")))
           (maybe (pr* "'or' in 'and' wandks\n")))
      (and (or (=* 0 0)
               (maybe (pr* "2 'or' in 'and' works\n")))
           (or (=* 1 0)
               (maybe (pr* "2 'or' in 'and' works\n"))))
      (let [x (maybe 8)]
        (and x (let [y (extract x)]
                 (maybe (+ y 1)))))
      (let [w (maybe 99)]
        (or (let [_ w
                  mv (+ 7 1)]
              (maybe mv))
            nothing)))
